replicaCount: 1

nameOverride: ""
fullnameOverride: ""

chimp-chomp:
  enabled: true
  queue:
    host:
      secretNameSuffix: rabbitmq-svcbind
      secretKey: uri
  volumes:
    - name: labxchem
      hostPath:
        path: /dls/labxchem
        type: Directory
  containerVolumeMounts:
    - name: labxchem
      mountPath: /dls/labxchem
      mountPropagation: HostToContainer

compound-library:
  enabled: true
  database:
    host: postgres://{{ .Release.Name }}-postgresql-ha-pgpool.xchemlab.svc.cluster.local
    user: xchemlab
    password:
      secretName: application-passwords
      secretKey: passwords
  opa:
    url: http://{{ .Release.Name }}-opa-kube-mgmt:8181

compound-soaking:
  enabled: true
  database:
    host: postgres://{{ .Release.Name }}-postgresql-ha-pgpool.xchemlab.svc.cluster.local
    user: xchemlab
    password:
      secretName: application-passwords
      secretKey: passwords
  opa:
    url: http://{{ .Release.Name }}-opa-kube-mgmt:8181

crystal-library:
  enabled: true
  database:
    host: postgres://{{ .Release.Name }}-postgresql-ha-pgpool.xchemlab.svc.cluster.local
    user: xchemlab
    password:
      secretName: application-passwords
      secretKey: passwords
  opa:
    url: http://{{ .Release.Name }}-opa-kube-mgmt:8181

pin-packing:
  enabled: true
  database:
    host: postgres://{{ .Release.Name }}-postgresql-ha-pgpool.xchemlab.svc.cluster.local
    user: xchemlab
    password:
      secretName: application-passwords
      secretKey: passwords
  opa:
    url: http://{{ .Release.Name }}-opa-kube-mgmt:8181

targeting:
  enabled: true
  objectstore:
    bucket:
      name: xchemlab-targeting
    url: https://sci-nas-s3.diamond.ac.uk
    forcePathStyle: true
    accessKeyID:
      secretName: targeting-s3-secret
      secretKey: access-key-id
    secretAccessKey:
      secretName: targeting-s3-secret
      secretKey: secret-access-key
  database:
    host: postgres://{{ .Release.Name }}-postgresql-ha-pgpool.xchemlab.svc.cluster.local
    user: xchemlab
    password:
      secretName: application-passwords
      secretKey: passwords
  opa:
    url: http://{{ .Release.Name }}-opa-kube-mgmt:8181

grafana:
  enabled: true

  rbac:
    create: false

  serviceAccount:
    create: false
    name: default-full-access-mounted

  ingress:
    enabled: true
    hosts:
      - xchemlab-grafana.diamond.ac.uk
    path: /
    tls:
      - hosts:
          - xchemlab-grafana.diamond.ac.uk

  grafana.ini:
    server:
      domain: xchemlab-grafana.diamond.ac.uk
      root_url: https://xchemlab-grafana.diamond.ac.uk
      serve_from_sub_path: true
    auth.generic_oauth:
      enabled: true
      auto_login: true
      client_id: $__file{/etc/secrets/oauth_provider/client-id}
      client_secret: $__file{/etc/secrets/oauth_provider/client-secret}
      scopes: openid profile email offline_access
      auth_url: https://authbeta.diamond.ac.uk/cas/oidc/authorize
      token_url: https://authbeta.diamond.ac.uk/cas/oidc/accessToken
      api_url: https://authbeta.diamond.ac.uk/cas/oidc/profile
      use_pkce: true
      use_refresh_token: true
      email_attribute_path: id

  extraSecretMounts:
    - name: oauth-provider
      secretName: oauth-provider
      defaultMode: 0440
      mountPath: /etc/secrets/oauth_provider
      readOnly: true

  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Prometheus
          type: prometheus
          url: https://xchemlab-thanos.diamond.ac.uk
          isDefault: true

keda:
  enabled: false

opa-kube-mgmt:
  enabled: true
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: "/metrics"
    prometheus.io/port: "8182"
  mgmt:
    enabled: false
  prometheus:
    enabled: true
  serviceAccount:
    create: false
  rbac:
    create: false

postgresql-ha:
  postgresql:
    existingSecret: postgres-passwords
    podAntiAffinityPreset: hard
    resources:
      requests:
        cpu: 500m
        memory: 512Mi
      limits:
        cpu: 2
        memory: 2Gi
    initdbScriptsSecret: postgres-init-script

  pgpool:
    existingSecret: pgpool-passwords
    customUsersSecret: application-passwords
    resources:
      requests:
        cpu: 500m
        memory: 256Mi
      limits:
        cpu: 1
        memory: 512Mi

  persistence:
    storageClass: db-nvme-storage
    size: 50Gi

prometheus:
  enabled: true

  kube-state-metrics:
    enabled: false

  prometheus-node-exporter:
    enabled: false

  prometheus-pushgateway:
    enabled: false

  rbac:
    create: false

  alertmanager:
    serviceAccount:
      create: false
      name: default-full-access-mounted
    ingress:
      enabled: true
      hosts:
        - host: xchemlab-alertmanager.diamond.ac.uk
          paths:
            - path: /
              pathType: Prefix
      tls:
        - hosts:
            - xchemlab-alertmanager.diamond.ac.uk
      annotations:
        nginx.ingress.kuberentes.io/use-regex: "true"
        nginx.ingress.kubernetes.io/auth-url: https://xchemlab-alertmanager.diamond.ac.uk/oauth2/auth
        nginx.ingress.kubernetes.io/auth-signin: https://xchemlab-alertmanager.diamond.ac.uk/oauth2/start?rd=$escaped_request_uri
    extraArgs:
      web.external-url: https://xchemlab-alertmanager.diamond.ac.uk
    resources:
      limits:
        cpu: 250m
        memory: 2Gi
    configmapReload:
      enabled: true
      resources:
        limits:
          cpu: 50m
          memory: 400Mi

  configmapReload:
    prometheus:
      resources:
        limits:
          cpu: 50m
          memory: 400Mi

  server:
    remoteWrite:
      - url: http://{{ .Release.Name }}-thanos-receive.xchemlab.svc.cluster.local:19291/api/v1/receive
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: app
                  operator: In
                  values:
                    - prometheus
            topologyKey: kubernetes.io/hostname
    persistentVolume:
      enabled: false
    retention: 7d
    statefulSet:
      enabled: true
    alertmanagers:
      - kubernetes_sd_configs:
          - role: pod
            namespaces:
              own_namespace: true
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace]
            regex: <namespace>
            action: keep
          - source_labels:
              [__meta_kubernetes_pod_label_app_kubernetes_io_instance]
            regex: <release-name>
            action: keep
          - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
            regex: alertmanager
            action: keep
          - source_labels: [__meta_kubernetes_pod_container_port_number]
            regex: "9093"
            action: keep

  serviceAccounts:
    prometheus-node-exporter:
      create: false
      name: default-full-access-mounted
    pushgateway:
      create: false
      name: default-full-access-mounted
    server:
      create: false
      name: default-full-access-mounted

  serverFiles:
    prometheus.yml:
      scrape_configs:
        - job_name: prometheus
          static_configs:
            - targets:
                - localhost:9090
        - job_name: "kubernetes-service-endpoints"
          kubernetes_sd_configs:
            - role: endpoints
              namespaces:
                own_namespace: true
          relabel_configs:
            - source_labels:
                [__meta_kubernetes_service_annotation_prometheus_io_scrape]
              action: keep
              regex: true
            - source_labels:
                [__meta_kubernetes_service_annotation_prometheus_io_scheme]
              action: replace
              target_label: __scheme__
              regex: (https?)
            - source_labels:
                [__meta_kubernetes_service_annotation_prometheus_io_path]
              action: replace
              target_label: __metrics_path__
              regex: (.+)
            - source_labels:
                [
                  __address__,
                  __meta_kubernetes_service_annotation_prometheus_io_port,
                ]
              action: replace
              target_label: __address__
              regex: (.+?)(?::\d+)?;(\d+)
              replacement: $1:$2
            - action: labelmap
              regex: __meta_kubernetes_service_annotation_prometheus_io_param_(.+)
              replacement: __param_$1
            - action: labelmap
              regex: __meta_kubernetes_service_label_(.+)
            - source_labels: [__meta_kubernetes_namespace]
              action: replace
              target_label: namespace
            - source_labels: [__meta_kubernetes_service_name]
              action: replace
              target_label: service
            - source_labels: [__meta_kubernetes_pod_node_name]
              action: replace
              target_label: node
        - job_name: "kubernetes-pods"
          kubernetes_sd_configs:
            - role: pod
              namespaces:
                own_namespace: true
          relabel_configs:
            - source_labels:
                [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
              action: keep
              regex: true
            - source_labels:
                [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
              action: keep
              regex: true
            - source_labels:
                [__meta_kubernetes_pod_annotation_prometheus_io_scheme]
              action: replace
              regex: (https?)
              target_label: __scheme__
            - source_labels:
                [__meta_kubernetes_pod_annotation_prometheus_io_path]
              action: replace
              target_label: __metrics_path__
              regex: (.+)
            - source_labels:
                [
                  __address__,
                  __meta_kubernetes_pod_annotation_prometheus_io_port,
                ]
              action: replace
              regex: ([^:]+)(?::\d+)?;(\d+)
              replacement: $1:$2
              target_label: __address__
            - action: labelmap
              regex: __meta_kubernetes_pod_annotation_prometheus_io_param_(.+)
              replacement: __param_$1
            - action: labelmap
              regex: __meta_kubernetes_pod_label_(.+)
            - source_labels: [__meta_kubernetes_namespace]
              action: replace
              target_label: namespace
            - source_labels: [__meta_kubernetes_pod_name]
              action: replace
              target_label: pod
            - source_labels: [__meta_kubernetes_pod_phase]
              regex: Pending|Succeeded|Failed|Completed
              action: drop

thanos:
  enabled: true

  existingServiceAccount: default-full-access-mounted

  existingObjstoreSecret: prometheus-s3-secret

  query:
    enabled: true
    ingress:
      enabled: false
    resources:
      limits:
        cpu: 250m
        memory: 2Gi

  queryFrontend:
    ingress:
      enabled: true
      hostname: xchemlab-thanos.diamond.ac.uk
      path: /
      tls: true
      annotations:
        nginx.ingress.kuberentes.io/use-regex: "true"
        nginx.ingress.kubernetes.io/auth-url: https://xchemlab-thanos.diamond.ac.uk/oauth2/auth
        nginx.ingress.kubernetes.io/auth-signin: https://xchemlab-thanos.diamond.ac.uk/oauth2/start?rd=$escaped_request_uri
    resources:
      limits:
        cpu: 250m
        memory: 2Gi

  storegateway:
    enabled: true
    persistence:
      enabled: false
    resources:
      limits:
        cpu: 250m
        memory: 2Gi

  receive:
    enabled: true
    tsdbRetention: 1d
    persistence:
      enabled: false
    service:
      type: LoadBalancer
    ingress:
      enabled: false
    resources:
      limits:
        cpu: 250m
        memory: 2Gi

  compactor:
    enabled: true
    retentionResolutionRaw: 90d
    retentionResolution5m: 90d
    retentionResolution1h: 90d
    consistencyDelay: 30m
    persistence:
      enabled: false
    resources:
      limits:
        cpu: 250m
        memory: 2Gi

rabbitmq:
  enabled: true
  metrics:
    enabled: true
    podAnnotations:
      prometheus.io/scrape: "true"
      prometheus.io/path: /metrics
      prometheus.io/port: "9419"
  persistence:
    enabled: false
  serviceBindings:
    enabled: true

serviceAccount:
  create: false
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext: {}

oauth2-proxy-thanos:
  enabled: true
  ingress:
    enabled: true
    hostname: xchemlab-thanos.diamond.ac.uk
    path: /oauth2
  redis:
    enabled: false
  configuration:
    existingSecret: oauth-provider
    oidcIssuerUrl: https://authbeta.diamond.ac.uk/cas/oidc
  extraEnvVars:
    - name: OAUTH2_PROXY_PROVIDER
      value: oidc
    - name: OAUTH2_PROXY_EMAIL_DOMAIN
      value: "*"
    - name: OAUTH2_PROXY_OIDC_EMAIL_CLAIM
      value: id

oauth2-proxy-alertmanager:
  enabled: true
  ingress:
    enabled: true
    hostname: xchemlab-alertmanager.diamond.ac.uk
    path: /oauth2
  redis:
    enabled: false
  configuration:
    existingSecret: oauth-provider
    oidcIssuerUrl: https://authbeta.diamond.ac.uk/cas/oidc
  extraEnvVars:
    - name: OAUTH2_PROXY_PROVIDER
      value: oidc
    - name: OAUTH2_PROXY_EMAIL_DOMAIN
      value: "*"
    - name: OAUTH2_PROXY_OIDC_EMAIL_CLAIM
      value: id
